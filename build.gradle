plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'chat.dvai'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'com.mashape.unirest:unirest-java:1.4.9'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'org.jboss.aerogear:aerogear-otp-java:1.0.0'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.1'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'com.h2database:h2'
	testImplementation 'org.mockito:mockito-core:5.17.0'
	testImplementation 'org.mockito:mockito-junit-jupiter:5.17.0'
}

test {
	def mockitoVersion = '5.17.0' // Passe ggf. an deine Version an
	def mockitoJar = configurations.testRuntimeClasspath.find {
		it.name == "mockito-core-${mockitoVersion}.jar"
	}
	if (mockitoJar) {
		jvmArgs += [
				"-javaagent:${mockitoJar}",
				"-Xshare:off"
		]
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
